@model FamilyBusinessLayer.Models.FamilyMemberDetails

@{
    ViewBag.Title = "Edit";
}
<div style="font-family:Arial">
    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>FamilyMemberDetails</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.FamilyMemberId)

            <div class="form-group">  
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @*@Html.DropDownList("Gender", new List<SelectListItem>
        {
            new SelectListItem{ Text="Male", Value="Male"},
            new SelectListItem{ Text="Female", Value= "Female"}
        }, "Select Gender")*@

                    @*@Html.EditorFor(model => model.Gender)*@
                    @Html.Display(Model.Gender)
                    @if (Model.Gender == "Female")
                        {
                            @Html.DropDownList("Gender", new List<SelectListItem>
                             {
                           new SelectListItem{ Text="Male", Value="Male"},
                           new SelectListItem{ Text="Female", Value="Female"},
                       }/*, "Select Gender"*/)
                        }
                        else 
                        {
                            @Html.DropDownList("Gender", new List<SelectListItem>
                            {
                          new SelectListItem{ Text="Female", Value="Female"},
                       new SelectListItem{ Text="Male", Value="Male"}}/*, "Select Gender"*/)
                        }


                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@


                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Job, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Job, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Job, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("FamilyMemberTypeName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownList("FamilyMemberTypeId", new List<SelectListItem>
               {
                   new SelectListItem{ Text= "Adult", Value= "1"},
                   new SelectListItem{Text="Children", Value="2"}
               },"Select MemberType")


                    @Html.ValidationMessageFor(model => model.FamilyMemberTypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "ViewFamilyMemberWithDetails")
    </div>
</div>
